/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// File Upload HTTP Protocol
// Rob Dobson 2021
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <FileUploadHTTPProtocol.h>
#include <Logger.h>
#include <RICRESTMsg.h>

// Log prefix
static const char *MODULE_PREFIX = "FileUpHTTP";

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Constructor
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FileUploadHTTPProtocol::FileUploadHTTPProtocol(FileStreamBlockWriteCB fileBlockWriteCB, 
            FileStreamBlockReadCB fileBlockReadCB,
            FileStreamGetCRCCB fileGetCRCCB,
            FileStreamCancelEndCB fileCancelEndCB,
            CommsCoreIF* pCommsCoreIF,
            FileStreamBase::FileStreamContentType fileStreamContentType, 
            FileStreamBase::FileStreamFlowType fileStreamFlowType,
            uint32_t streamID, 
            uint32_t fileStreamLength,
            const char* fileStreamName) :
    FileStreamBase(fileBlockWriteCB, fileBlockReadCB, fileGetCRCCB, fileCancelEndCB, 
            pCommsCoreIF, 
            fileStreamContentType, fileStreamFlowType, 
            streamID, fileStreamLength, fileStreamName)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Service
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void FileUploadHTTPProtocol::service()
{
    // Nothing to do
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Handle command frame
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RaftRetCode::RetCode FileUploadHTTPProtocol::handleCmdFrame(FileStreamBase::FileStreamMsgType fsMsgType, 
                const RICRESTMsg& ricRESTReqMsg, String& respMsg, 
                const CommsChannelMsg &endpointMsg)
{
    // Unexpected message
    LOG_W(MODULE_PREFIX, "handleCmdFrame UNEXPECTED req %s", ricRESTReqMsg.getReq().c_str());

    return RaftRetCode::INVALID_OPERATION;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Handle data frame (file/stream block)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RaftRetCode::RetCode FileUploadHTTPProtocol::handleDataFrame(const RICRESTMsg& ricRESTReqMsg, String& respMsg)
{
#ifdef DEBUG_FILE_STREAM_BLOCK_DETAIL
    LOG_I(MODULE_PREFIX, "handleDataFrame isUploading %d msgLen %d expectedPos %d", 
            _isUploading, ricRESTReqMsg.getBinLen(), _expectedFilePos);
#endif
    // HTTP protocol handles the file upload in the HTTP POST body
    return RaftRetCode::INVALID_OPERATION;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Get debug str
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

String FileUploadHTTPProtocol::getDebugJSON(bool includeBraces)
{
    return "{}";
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Is Active
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool FileUploadHTTPProtocol::isActive()
{
    return false;
}
